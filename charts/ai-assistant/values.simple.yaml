aiAssistantLicense:
  activationKey: ""
  externalSecret:
    name: ""
    key: AI_ASSISTANT_ACTIVATION_KEY

apiAuth:
  apiToken: secret
  jwt:
    publicKey: none
    algorithm: RS256

# This is only necessary until `openai-mock` supports text embeddings
sidecars:
  - name: openai-mocker
    image: zmuonsoft/openapi-mock
    imagePullPolicy: IfNotPresent
    env:
      - name: OPENAPI_MOCK_SPECIFICATION_URL
        value: "https://app.stainless.com/api/spec/documented/openai/openapi.documented.yml"

config:
  serviceConfiguration:
    version: '1'
    aiServices:
      chat:
        provider:
          name: 'openai-compat'
          baseUrl: 'https://api.openai-mock.com'
        model: 'gpt-4'
      textEmbeddings:
        provider:
          name: 'openai-compat'
          # `openai-mock` does not yet support text embeddings
          baseUrl: 'http://localhost:8080'
        model: 'text-embedding-3-small'
  documentEngine:
    enabled: true
    url: http://document-engine:5000
    auth:
      apiToken: documentEngineSecret

database:
  enabled: true
  engine: postgres
  postgres:
    username: postgres
    password: nutrient
    database: ai-assistant
    tls:
      enabled: false

dashboard:
  auth:
    username: admin
    password: admin

observability:
  log:
    level: verbose
    socketTraces: false
  opentelemetry:
    enabled: false

replicaCount: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0

resources:
  limits:
    cpu: "4"
    memory: 8Gi
  requests:
    cpu: "1"
    memory: 1Gi

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 16k"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
  hosts:
    - paths:
        - path: /
          pathType: ImplementationSpecific

postgresql:
  enabled: true
  architecture: standalone
  primary:
    persistence:
      enabled: false
    extraEnvVars:
      - name: POSTGRES_DB
        value: 'ai-assistant'
  auth:
    enabledPostgresUser: true
    postgresPassword: nutrient
    database: ai-assistant

documentEngine:
  enabled: true
  fullnameOverride: document-engine
  nameOverride: document-engine
  documentEngineLicense:
    activationKey: ""
    externalSecret:
      name: ""
  apiAuth:
    apiToken: documentEngineSecret
  config:
    trustedProxies: default
  documentSigningService:
    enabled: false
  database:
    enabled: true
    engine: postgres
    migrationJob:
      enabled: false
    postgres:
      host: document-engine-postgresql
      port: 5432
      username: postgres
      tls:
        enabled: false
  assetStorage:
    backendType: built-in
    backendFallback:
      enabled: false
  dashboard:
    auth:
      username: admin
      password: admin
  observability:
    log:
      level: debug
    opentelemetry:
      enabled: false
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  resources:
    limits:
      cpu: "4"
      memory: 8Gi
    requests:
      cpu: "1"
      memory: 1Gi
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
      nginx.ingress.kubernetes.io/large-client-header-buffers: "4 16k"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    hosts:
      - paths:
          - path: /
            pathType: ImplementationSpecific
  postgresql:
    enabled: true
    architecture: standalone
    fullnameOverride: document-engine-postgresql
    nameOverride: document-engine-postgresql
    primary:
      persistence:
        enabled: false
    volumePermissions:
      enabled: true
  minio:
    enabled: false
  redis:
    enabled: false
