aiAssistantLicense:
  activationKey: ""
  externalSecret:
    name: ""
    key: AI_ASSISTANT_ACTIVATION_KEY

apiAuth:
  apiToken: secret
  jwt:
    publicKey: none
    algorithm: RS256
 
config:
  serviceConfiguration:
    version: '1'
    aiServices:
      chat:
        provider:
          name: 'openai'
        model: 'gpt-4'
      textEmbeddings:
        provider:
          name: 'openai'
        model: 'text-embedding-3-small'
  documentEngine:
    enabled: true
    url: http://document-engine:5000
    auth:
      apiToken: secret

database:
  enabled: true
  engine: postgres
  postgres:
    host: postgresql
    port: 5432
    username: postgres
    password: nutrient
    database: ai-assistant
    tls:
      enabled: false

dashboard:
  auth:
    username: admin
    password: admin

observability:
  log:
    level: debug
  opentelemetry:
    enabled: false

replicaCount: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0

resources:
  limits:
    cpu: "4"
    memory: 8Gi
  requests:
    cpu: "1"
    memory: 1Gi

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/large-client-header-buffers: "4 16k"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
  hosts:
    - paths:
        - path: /
          pathType: ImplementationSpecific

postgresql:
  enabled: true
  architecture: standalone
  fullnameOverride: postgresql
  nameOverride: postgresql
  primary:
    persistence:
      enabled: false
  volumePermissions:
    enabled: true

minio:
  enabled: false
redis:
  enabled: false
