{{- if .Values.nginxSidecar.enabled -}}
{{- $fullName := include "document-engine.fullname" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullName }}-nginx-sidecar
  labels:
    {{- include "document-engine.labels" . | nindent 4 }}
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      # Extract document ID from URI
      map $uri $document_id {
        default "";
        ~^/api/documents/([a-zA-Z0-9._~-]+)           $1;
        ~^/i/d/([a-zA-Z0-9._~-]+)                     $1;
        ~^/documents/([a-zA-Z0-9._~-]+)               $1;
        ~^/dashboard/api/document/([a-zA-Z0-9._~-]+)  $1;
      }

      # Use hash_key for routing decision
      map $document_id $hash_key {
        default $request_id;
        "~."    $document_id;
      }

      resolver kube-dns.kube-system.svc.cluster.local valid=5s;

      upstream document_engine_backend {
        # Resolve DNS to get all pod IPs from headless service
        server {{ $fullName }}-headless.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }} resolve;

        # Consistent hash based on document ID
        hash $hash_key consistent;
      }

      server {
        listen {{ .Values.nginxSidecar.port }};

        location / {
          # Add debug headers
          add_header X-Hash-Key $hash_key always;
          add_header X-Pod-Name $hostname always;

          # Forward to consistent backend
          proxy_pass http://document_engine_backend;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          # Timeouts
          proxy_connect_timeout 60s;
          proxy_send_timeout 60s;
          proxy_read_timeout 60s;
        }
      }
    }
{{- end }}
