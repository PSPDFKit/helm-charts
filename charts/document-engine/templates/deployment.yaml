apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "document-engine.fullname" . }}
  labels:
    {{- include "document-engine.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .}}
  {{- end }}
  {{- with .Values.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "document-engine.selectorLabels" . | nindent 6 }}
      {{- with .Values.deploymentExtraSelectorLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "document-engine.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.deploymentExtraSelectorLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "document-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{ toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "document-engine.fullname" . }}
            - secretRef:
                name: {{ include "document-engine.fullname" . }}
          {{- if and .Values.database.enabled 
                     .Values.database.postgres.externalSecretName }}
            - secretRef:
                name: {{ .Values.database.postgres.externalSecretName }}
          {{- end }}
          {{- if and .Values.database.enabled 
                     .Values.database.migrationJob.enabled
                     .Values.database.postgres.externalAdminSecretName  }}
            - secretRef:
                name: {{ .Values.database.postgres.externalAdminSecretName }}
          {{- end }}
          {{- with .Values.assetStorage }}
            {{- if and (eq (include "document-engine.storage.s3.enabled" $) "true") 
                       .s3.externalSecretName }}
            - secretRef:
                name: {{ .s3.externalSecretName }}
            {{- end }}
            {{- if and (eq (include "document-engine.storage.azure.enabled" $) "true")
                       .azure.externalSecretName }}
            - secretRef:
                name: {{ .azure.externalSecretName }}
            {{- end }}
            {{- if and .redis.enabled 
                       .redis.externalSecretName }}
            - secretRef:
                name: {{ .redis.externalSecretName  }}
            {{- end }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if .Values.documentEngineLicense.externalSecret.name }}
            - name: ACTIVATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.documentEngineLicense.externalSecret.name }}
                  key: {{ .Values.documentEngineLicense.externalSecret.key }}
          {{- end }}
          {{- if .Values.apiAuth.externalSecret.name }}
            {{- with .Values.apiAuth }}
              {{- if .externalSecret.apiTokenKey }}
            - name: API_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .externalSecret.name }}
                  key: {{ .externalSecret.apiTokenKey }}
              {{- end }}
              {{- if .externalSecret.secretKeyBaseKey }}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ .externalSecret.name }}
                  key: {{ .externalSecret.secretKeyBaseKey }}
              {{- end }}
              {{- if and .jwt.enabled .externalSecret.jwtPublicKeyKey }}
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .externalSecret.name }}
                  key: {{ .externalSecret.jwtPublicKeyKey }}
              {{- end }}
              {{- if and .jwt.enabled .externalSecret.jwtAlgorithmKey }}
            - name: JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: {{ .externalSecret.name }}
                  key: {{ .externalSecret.jwtAlgorithmKey }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if and .Values.dashboard.enabled 
                     .Values.dashboard.auth.externalSecret.name}}
            - name: DASHBOARD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboard.auth.externalSecret.name }}
                  key: {{ .Values.dashboard.auth.externalSecret.usernameKey }}
            - name: DASHBOARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.dashboard.auth.externalSecret.name }}
                  key: {{ .Values.dashboard.auth.externalSecret.passwordKey }}
          {{- end }}
          {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.config.port }}
              protocol: TCP
            {{- if .Values.observability.metrics.prometheusEndpoint.enabled }}
            - name: metrics
              containerPort: {{ .Values.observability.metrics.prometheusEndpoint.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe: {{ toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{ toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.extraVolumeMounts
                    .Values.certificateTrust.digitalSignatures 
                    .Values.certificateTrust.customCertificates }}
          volumeMounts:
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.certificateTrust.digitalSignatures }}
            {{-   range $trustSource := . }}
            - name: signing-trust-{{ $trustSource.name }}
              mountPath: /certificate-stores/{{ $trustSource.path }}
              subPath: {{ $trustSource.path }}
              readOnly: true
            {{-   end }}
            {{- end }}
            {{- with .Values.certificateTrust.customCertificates }}
            {{-   range $trustSource := . }}
            - name: custom-trust-{{ $trustSource.name }}
              mountPath: /certificate-stores-custom/{{ $trustSource.path }}
              subPath: {{ $trustSource.path }}
              readOnly: true
            {{-   end }}
            {{- end }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if (eq (include "document-engine.envoySidecar.enabled" . ) "true" ) }}
        - name: envoy-sidecar
          image: "{{ .Values.envoySidecar.image.repository }}:{{ .Values.envoySidecar.image.tag }}"
          imagePullPolicy: {{ .Values.envoySidecar.image.pullPolicy }}
          ports:
            - name: envoy
              containerPort: {{ .Values.envoySidecar.port }}
              protocol: TCP
            - name: envoy-admin
              containerPort: {{ .Values.envoySidecar.adminPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.envoySidecar.resources | nindent 12 }}
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
              readOnly: true
          command:
            - envoy
            - -c
            - /etc/envoy/envoy.yaml
      {{- end }}
      {{- if .Values.sidecars }}
        {{ toYaml .Values.sidecars | nindent 8 }}
      {{- end }}
      {{- if or .Values.extraVolumeMounts
                .Values.certificateTrust.digitalSignatures
                .Values.certificateTrust.customCertificates
                .Values.envoySidecar.enabled }}
      volumes:
        {{- if (eq (include "document-engine.envoySidecar.enabled" . ) "true" ) }}
        - name: envoy-config
          configMap:
            name: {{ include "document-engine.fullname" . }}-envoy-sidecar
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.certificateTrust.digitalSignatures }}
        {{-   range $trustSource := . }}
        - name: signing-trust-{{ $trustSource.name }}
        {{-     if $trustSource.configMap }}
          configMap:
            name: {{ $trustSource.configMap.name }}
            items:
              - key: {{ $trustSource.configMap.key }}
                path: {{ $trustSource.path }}
        {{-     else if $trustSource.secret }}
          secret:
            secretName: {{ $trustSource.secret.name }}
            items:
              - key: {{ $trustSource.secret.key }}
                path: {{ $trustSource.path }}
        {{-     else }}
        {{-       fail "Expecting ConfigMap or Secret for a certificate trust" }}
        {{-     end }}
        {{-   end }}
        {{- end }}
        {{- with .Values.certificateTrust.customCertificates }}
        {{-   range $trustSource := . }}
        - name: custom-trust-{{ $trustSource.name }}
        {{-     if $trustSource.configMap }}
          configMap:
            name: {{ $trustSource.configMap.name }}
            items:
              - key: {{ $trustSource.configMap.key }}
                path: {{ $trustSource.path }}
        {{-     else if $trustSource.secret }}
          secret:
            secretName: {{ $trustSource.secret.name }}
            items:
              - key: {{ $trustSource.secret.key }}
                path: {{ $trustSource.path }}
        {{-     else }}
        {{-       fail "Expecting ConfigMap or Secret for a certificate trust" }}
        {{-     end }}
        {{-   end }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
