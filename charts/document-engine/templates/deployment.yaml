apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "document-engine.fullname" . }}
  labels:
    {{- include "document-engine.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy:
    {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "document-engine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.ConfigMap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/config.Secret.yaml") . | sha256sum }}
      {{- if not .Values.apiAuth.externalSecret.name }}
        checksum/auth-api: {{ include (print $.Template.BasePath "/config.api-auth.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if not .Values.dashboard.auth.externalSecret.name }}
        checksum/auth-dashboard: {{ include (print $.Template.BasePath "/dashboard.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if and 
            (not .Values.documentEngineLicense.externalSecret.name)
            (eq (include  "document-engine.license.available" .) "true") }}
        checksum/license-secret: {{ include (print $.Template.BasePath "/license.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if  (include "document-engine.storage.postgres.createSecret" .)  }}
        checksum/postgres-config: {{ include (print $.Template.BasePath "/config.storage-postgres.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if  (include "document-engine.storage.postgres.createAdminSecret" .)  }}
        checksum/postgres-admin-config: {{ include (print $.Template.BasePath "/config.storage-postgres.admin.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if (include "document-engine.storage.redis.createSecret" .) }}
        checksum/redis-secret: {{ include (print $.Template.BasePath "/config.storage-redis.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if (include "document-engine.storage.s3.createSecret" .) }}
        checksum/s3-secret: {{ include (print $.Template.BasePath "/config.storage-s3.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- if (include "document-engine.storage.azure.createSecret" .) }}
        checksum/azure-secret: {{ include (print $.Template.BasePath "/config.storage-azure.Secret.yaml") . | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "document-engine.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "document-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{ toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "document-engine.fullname" . }}-config
          {{- if .Values.assetStorage.postgres.enabled }}
            - secretRef:
                name: {{ include "document-engine.storage.postgres.secret.name" . }}
          {{- end }}
          {{- if .Values.assetStorage.redis.enabled }}
            - secretRef:
                name: {{ include "document-engine.storage.redis.secret.name" . }}
          {{- end }}
          {{- if eq (include "document-engine.storage.s3.enabled" .) "true" }}
            - secretRef:
                name: {{ include "document-engine.storage.s3.secret.name" . }}
          {{- end }}
          {{- if eq (include "document-engine.storage.azure.enabled" .) "true" }}
            - secretRef:
                name: {{ include "document-engine.storage.azure.secret.name" . }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if eq (include  "document-engine.license.available" .) "true" }}
            - name: ACTIVATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.license.secret.name" . }}
                  key: {{ include "document-engine.license.secret.key" . }}
            {{- end }}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.secretKeyBase.secret.name" . }}
                  key: {{ include "document-engine.secretKeyBase.secret.key" . }}
            - name: API_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.api.secret.name" . }}
                  key: {{ include "document-engine.api.secret.key.apiToken" . }}
          {{- if .Values.apiAuth.jwt.enabled }}
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.api.secret.name" . }}
                  key: {{ include "document-engine.api.secret.key.jwtPublicKey" . }}
            - name: JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.api.secret.name" . }}
                  key: {{ include "document-engine.api.secret.key.jwtAlgorithm" . }}
          {{- end }}
          {{- if .Values.dashboard.enabled }}
            - name: DASHBOARD_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.dashboard.secret.name" . }}
                  key: {{ include "document-engine.dashboard.secret.key.username" . }}
            - name: DASHBOARD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.dashboard.secret.name" . }}
                  key: {{ include "document-engine.dashboard.secret.key.password" . }}
          {{- end }}
          {{- with .Values.extraEnvs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: statsd-metrics
              containerPort: 9125
              protocol: TCP
          {{- if .Values.startupProbe }}
          startupProbe: {{ toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{ toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.extraVolumeMounts
                    .Values.certificateTrust.digitalSignatures 
                    .Values.certificateTrust.customCertificates }}
          volumeMounts:
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.certificateTrust.digitalSignatures }}
            {{-   range $trustSource := . }}
            - name: signing-trust-{{ $trustSource.name }}
              mountPath: /certificate-stores/{{ $trustSource.path }}
              subPath: {{ $trustSource.path }}
              readOnly: true
            {{-   end }}
            {{- end }}
            {{- with .Values.certificateTrust.customCertificates }}
            {{-   range $trustSource := . }}
            - name: custom-trust-{{ $trustSource.name }}
              mountPath: /certificate-stores-custom/{{ $trustSource.path }}
              subPath: {{ $trustSource.path }}
              readOnly: true
            {{-   end }}
            {{- end }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.prometheusExporter }}
        {{- if and .enabled 
                   $.Values.observability.metrics.statsd.enabled }}
        - name: statsd-exporter
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          args:
            - --statsd.listen-udp=:{{ $.Values.observability.metrics.statsd.port }}
            - --statsd.listen-tcp=:{{ $.Values.observability.metrics.statsd.port }}
            - --web.listen-address=:{{ .port }}
          ports:
            - name: metrics
              containerPort: {{ .port }}
              protocol: TCP
          resources:
            {{- toYaml .resources | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- if .Values.sidecars }}
        {{ toYaml .Values.sidecars | nindent 8 }}
      {{- end }}
      {{- if or .Values.extraVolumeMounts
                .Values.certificateTrust.digitalSignatures 
                .Values.certificateTrust.customCertificates }}
      volumes:
        {{- with .Values.extraVolumes }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.certificateTrust.digitalSignatures }}
        {{-   range $trustSource := . }}
        - name: signing-trust-{{ $trustSource.name }}
        {{-     if $trustSource.configMap }}
          configMap:
            name: {{ $trustSource.configMap.name }}
            items:
              - key: {{ $trustSource.configMap.key }}
                path: {{ $trustSource.path }}
        {{-     else if $trustSource.secret }}
          secret:
            secretName: {{ $trustSource.secret.name }}
            items:
              - key: {{ $trustSource.secret.key }}
                path: {{ $trustSource.path }}
        {{-     else }}
        {{-       fail "Expecting ConfigMap or Secret for a certificate trust" }}
        {{-     end }}
        {{-   end }}
        {{- end }}
        {{- with .Values.certificateTrust.customCertificates }}
        {{-   range $trustSource := . }}
        - name: custom-trust-{{ $trustSource.name }}
        {{-     if $trustSource.configMap }}
          configMap:
            name: {{ $trustSource.configMap.name }}
            items:
              - key: {{ $trustSource.configMap.key }}
                path: {{ $trustSource.path }}
        {{-     else if $trustSource.secret }}
          secret:
            secretName: {{ $trustSource.secret.name }}
            items:
              - key: {{ $trustSource.secret.key }}
                path: {{ $trustSource.path }}
        {{-     else }}
        {{-       fail "Expecting ConfigMap or Secret for a certificate trust" }}
        {{-     end }}
        {{-   end }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
