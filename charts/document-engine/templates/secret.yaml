{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace ( include "document-engine.fullname" . ) ) | default dict -}}
{{- $secretData := (get $secretObj "data") | default dict -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "document-engine.fullname" . }}
  labels:
    {{- include "document-engine.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: "keep"
data:
# License
{{- if not .Values.documentEngineLicense.externalSecret.name }}
  {{- with .Values.documentEngineLicense.activationKey }}
  ACTIVATION_KEY: {{ . | b64enc | quote }}
  {{- end }}
{{- end }}
# Secret key base
{{- if not (and .Values.apiAuth.externalSecret.name
                .Values.apiAuth.externalSecret.secretKeyBaseKey ) -}}
  {{- $secretKeyBase := (get $secretData "SECRET_KEY_BASE") | default ( default (randAlphaNum 256) .Values.apiAuth.secretKeyBase | b64enc) }}
  SECRET_KEY_BASE: {{ $secretKeyBase | quote }}
{{- end }}
# API auth secrets
{{- if not .Values.apiAuth.externalSecret.name }}
  API_AUTH_TOKEN: {{ default (randAlphaNum 64) .Values.apiAuth.apiToken | b64enc | quote }}
{{-   if .Values.apiAuth.jwt.enabled }}
  JWT_PUBLIC_KEY: {{ default "none" .Values.apiAuth.jwt.publicKey | b64enc | quote }}
  JWT_ALGORITHM: {{ default "none" .Values.apiAuth.jwt.algorithm | b64enc | quote }}
{{-   end }}
{{- end }}
# Database secrets
{{- if .Values.database.enabled }}
  {{- if not .Values.database.postgres.externalSecretName }}
  # Normal database use
  PGUSER: {{ .Values.database.postgres.username | b64enc | quote }}
  PGPASSWORD: {{ .Values.database.postgres.password | b64enc | quote }}
  {{- end }}
  {{- if not .Values.database.postgres.externalAdminSecretName }}
  # Administrative access for migrations
  PG_ADMIN_USER: {{ .Values.database.postgres.adminUsername | b64enc | quote }}
  PG_ADMIN_PASSWORD: {{ .Values.database.postgres.adminPassword  | b64enc | quote }}
  {{- end }}
{{- end }}
# Asset storage secrets
{{- with .Values.assetStorage }}
{{-   if and (eq (include "document-engine.storage.s3.enabled" $) "true") 
             (not .s3.externalSecretName)
             .s3.accessKeyId .s3.secretAccessKey }}
  ASSET_STORAGE_S3_ACCESS_KEY_ID: {{ .s3.accessKeyId | b64enc | quote }}
  ASSET_STORAGE_S3_SECRET_ACCESS_KEY: {{ .s3.secretAccessKey | b64enc | quote }}
{{-   end }}
{{-   if and (eq (include "document-engine.storage.azure.enabled" $) "true")
             (not .azure.externalSecretName) }}
{{-     if .azure.connectionString }}
  AZURE_STORAGE_ACCOUNT_CONNECTION_STRING: {{ .azure.connectionString | b64enc | quote }}
{{-     else if and .azure.accountName .azure.accountKey }}
  AZURE_STORAGE_ACCOUNT_NAME: {{ .azure.accountName | b64enc | quote }}
  AZURE_STORAGE_ACCOUNT_KEY: {{ .azure.accountKey | b64enc | quote }}
{{-     end }}
{{-   end }}
{{-   if and .redis.enabled 
             (not .redis.externalSecretName) }}
{{-     with .redis.username }}
  REDIS_USERNAME: {{ . | b64enc | quote }}
{{-     end }}
{{-     with .redis.password }}
  REDIS_PASSWORD: {{ . | b64enc | quote }}
{{-     end }}
{{-   end }}
{{- end }}
# Dashboard
{{- with .Values.dashboard.auth }}
{{-   if not .externalSecret.name }}
{{-     $dashboardUserName := (get $secretData "DASHBOARD_USERNAME") | default ( default (randAlphaNum 32) .username | b64enc) }}
{{-     $dashboardPassword := (get $secretData "DASHBOARD_PASSWORD") | default ( default (randAlphaNum 64) .password | b64enc) }}
  DASHBOARD_USERNAME: {{ $dashboardUserName | quote }}
  DASHBOARD_PASSWORD: {{ $dashboardPassword | quote }}
{{-   end }}
{{- end }}
# Can be used for hash updating
  HELM_CHART_VERSION: {{ include "document-engine.chart" . | b64enc | quote }}
