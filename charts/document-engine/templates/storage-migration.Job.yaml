{{- if and .Values.assetStorage.postgres.enabled .Values.assetStorage.databaseMigrationJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "document-engine.fullname" . }}-db-migration
  labels:
    {{- include "document-engine.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
spec:
  ttlSecondsAfterFinished: {{ .Values.assetStorage.databaseMigrationJob.ttlSecondsAfterFinished }}
  template:
    metadata:
      name: {{ include "document-engine.fullname" . }}-db-migration
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.assetStorage.databaseMigrationJob.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "document-engine.migrationSelectorLabels" . | nindent 8 }}
      {{- with .Values.assetStorage.databaseMigrationJob.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "document-engine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{ toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "document-engine.fullname" . }}-config
          {{- if .Values.assetStorage.postgres.enabled }}
            - secretRef:
                name: {{ include "document-engine.storage.postgres.secret.name" . }}
          {{- end }}
          {{- if .Values.assetStorage.redis.enabled }}
            - secretRef:
                name: {{ include "document-engine.storage.redis.secret.name" . }}
          {{- end }}
          {{- if eq (include "document-engine.storage.s3.enabled" .) "true" }}
            - secretRef:
                name: {{ include "document-engine.storage.s3.secret.name" . }}
          {{- end }}
          {{- with .Values.extraEnvFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if eq (include  "document-engine.license.available" .) "true" }}
            - name: ACTIVATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.license.secret.name" . }}
                  key: {{ include "document-engine.license.secret.key" . }}
            {{- end }}
            - name: ENABLE_DATABASE_MIGRATIONS
              value: 'true'
            - name: EXIT_AFTER_DATABASE_MIGRATIONS
              value: 'true'
            - name: PG_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.storage.postgres.adminSecret.name" . }}
                  key: PG_ADMIN_USER
            - name: PG_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.storage.postgres.adminSecret.name" . }}
                  key: PG_ADMIN_PASSWORD
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "document-engine.secretKeyBase.secret.name" . }}
                  key: {{ include "document-engine.secretKeyBase.secret.key" . }}
          {{- with .Values.extraEnvs }}
            {{- toYaml .| nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.assetStorage.databaseMigrationJob.resources | nindent 12 }}
          {{- if or .Values.extraVolumeMounts 
                    .Values.certificateTrust.customCertificates }}
          volumeMounts:
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.certificateTrust.customCertificates }}
            {{-   range $trustSource := . }}
            - name: custom-trust-{{ $trustSource.name }}
              mountPath: /certificate-stores-custom/{{ $trustSource.path }}
              subPath: {{ $trustSource.path }}
              readOnly: true
            {{-   end }}
            {{- end }}
          {{- end }}
      {{- if .Values.sidecars }}
        {{ toYaml .Values.sidecars | nindent 8 }}
      {{- end }}
      {{- if or .Values.extraVolumeMounts 
                .Values.certificateTrust.customCertificates }}
      volumes:
        {{- with .Values.extraVolumes }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.certificateTrust.customCertificates }}
        {{-   range $trustSource := . }}
        - name: custom-trust-{{ $trustSource.name }}
        {{-     if $trustSource.configMap }}
          configMap:
            name: {{ $trustSource.configMap.name }}
            items:
              - key: {{ $trustSource.configMap.key }}
                path: {{ $trustSource.path }}
        {{-     else if $trustSource.secret }}
          secret:
            secretName: {{ $trustSource.secret.name }}
            items:
              - key: {{ $trustSource.secret.key }}
                path: {{ $trustSource.path }}
        {{-     else }}
        {{-       fail "Expecting ConfigMap or Secret for a certificate trust" }}
        {{-     end }}
        {{-   end }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
