{{/*
Functions {
*/}}
{{- define "chart.valuesTableOfContents" -}}
{{-   if .Sections.Sections -}}
{{-     $sectionNames := list -}}
{{-     range .Sections.Sections -}}
{{-       $sectionNames = append $sectionNames .SectionName -}}
{{-     end -}}
{{-     $sections := list -}}
{{-     range ($sectionNames | sortAlpha) -}}
{{-       $currentSectionName := . -}}
{{-       range $.Sections.Sections -}}
{{-         if eq .SectionName $currentSectionName -}}
{{-           $thisSection := dict -}}
{{-           $title := regexReplaceAll "^[0-9A-Z]+\\.\\s+" .SectionName "" -}}
{{-           $link := printf "./values.yaml#L%d" (first .SectionItems).LineNumber -}}
{{-           $_ := set $thisSection "SectionName" .SectionName -}}
{{-           $_ := set $thisSection "SectionItems" .SectionItems -}}
{{-           $_ := set $thisSection "SectionTitle" $title -}}
{{-           $sections = append $sections $thisSection -}}
{{-         end -}}
{{-       end -}}
{{-     end -}}
{{-     if .Sections.DefaultSection.SectionItems -}}
{{-       $thisSection := dict -}}
{{-       $_ := set $thisSection "SectionName" .Sections.DefaultSection.SectionName -}}
{{-       $_ := set $thisSection "SectionItems" .Sections.DefaultSection.SectionItems -}}
{{-       $_ := set $thisSection "SectionTitle" .Sections.DefaultSection.SectionName -}}
{{-       $sections = append $sections $thisSection -}}
{{-     end -}}
{{-     range $sections -}}
{{-       $sectionAnchor := regexReplaceAll "\\s" .SectionTitle "-" | lower }}
  * [{{ .SectionTitle }}](#{{ $sectionAnchor }})
{{-     end -}}
{{-   end -}}
{{- end -}}

{{- define "chart.valueDefaultColumnRender" -}}
{{-   $defaultValue := (default .Default .AutoDefault) -}}
{{-   $notationType := .NotationType -}}
{{-   if .Default -}}
{{-     $defaultValue = (trimAll "`" (default .Default .AutoDefault) ) -}}
{{-     $notationType = "json" -}}
{{-   end -}}
{{-   if eq $notationType "none" -}}
{{-   else if eq $notationType "reference" -}}
[...](./values.yaml#L{{ .LineNumber }})
{{-   else if eq $notationType "plain" -}}
{{-     $defaultValue }}
{{-   else if eq $notationType "tpl" -}}
`{{ $defaultValue }}`
{{-   else -}}
`{{ $defaultValue }}`
{{-   end -}}
{{- end -}}

{{- define "chart.valuesTable" -}}
{{-   if .Sections.Sections -}}
{{-     $sectionNames := list -}}
{{-     range .Sections.Sections -}}
{{-       $sectionNames = append $sectionNames .SectionName -}}
{{-     end -}}
{{-     $sections := list -}}
{{-     range ($sectionNames | sortAlpha) -}}
{{-       $currentSectionName := . -}}
{{-       range $.Sections.Sections -}}
{{-         if eq .SectionName $currentSectionName -}}
{{-           $thisSection := dict -}}
{{-           $title := regexReplaceAll "^[0-9A-Z]+\\.\\s+" .SectionName "" -}}
{{-           $link := printf "./values.yaml#L%d" (first .SectionItems).LineNumber -}}
{{-           $_ := set $thisSection "SectionName" .SectionName -}}
{{-           $_ := set $thisSection "SectionItems" .SectionItems -}}
{{-           $_ := set $thisSection "SectionTitle" $title -}}
{{-           $_ := set $thisSection "SectionHeading" (printf "[%s](%s)" $title $link) -}}
{{-           $sections = append $sections $thisSection -}}
{{-         end -}}
{{-       end -}}
{{-     end -}}
{{-     if .Sections.DefaultSection.SectionItems -}}
{{-       $thisSection := dict -}}
{{-       $_ := set $thisSection "SectionName" .Sections.DefaultSection.SectionName -}}
{{-       $_ := set $thisSection "SectionItems" .Sections.DefaultSection.SectionItems -}}
{{-       $_ := set $thisSection "SectionTitle" .Sections.DefaultSection.SectionName -}}
{{-       $_ := set $thisSection "SectionHeading" .Sections.DefaultSection.SectionName -}}
{{-       $sections = append $sections $thisSection -}}
{{-     end -}}
{{-     range $sections }}

### {{ .SectionTitle }}

| Key | Description | Default |
|-----|-------------|---------|
{{-       range .SectionItems }}
| [`{{ .Key }}`](./values.yaml#L{{ .LineNumber }}) | {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }} | {{  template "chart.valueDefaultColumnRender" . }} |
{{-       end }}
{{-     end }}
{{-   end -}}
{{- end -}}
{{/*
} End of functions
*/ -}}

# Document Engine Helm chart

{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

* [Using this chart](#using-this-chart)
* [Integrations](#integrations)
  * [AWS ALB](#aws-alb-integration)
* [Values](#values)
{{- template "chart.valuesTableOfContents" . }}
* [Contribution](#contribution)
* [License](#license)
* [Support, Issues and License Questions](#support-issues-and-license-questions)

## Maintainers 

{{ template "chart.maintainersTable" . }}

## Using this chart

### Adding the repository

```shell
helm repo add nutrient https://pspdfkit.github.io/helm-charts
helm repo update
```

### Installing Document Engine

```shell
helm upgrade --install -n document-engine \
     document-engine nutrient/document-engine \
     -f ./document-engine-values.yaml
```

### Dependencies

The chart does not provide means to install PostgreSQL database, object storage or Redis for rendering cache.
Instead, we recommend to manage these resoursces externally, e.g., on the cloud provider level. 

However, the chart suggests generation of resources for:

* [CloudNativePG](https://cloudnative-pg.io/) PostgreSQL database cluster

{{ template "chart.requirementsTable" . }}

Schema is generated using [helm values schema json plugin](https://github.com/losisin/helm-values-schema-json).

`README.md` is generated with [helm-docs](https://github.com/norwoodj/helm-docs).

### Upgrade

> [!NOTE] 
> Please consult the [changelog](/charts/document-engine/CHANGELOG.md)

## Integrations

### AWS ALB integration

When using an Application Load Balancer in front of Document Engine, it needs to have the pod lifecycle aligned with Document Engine. 

Specifically:

* A pod needs to stay alive longer than [target group deregistration delay](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_TargetGroupAttribute.html). This can be achieved using `lifecycle` and `terminationGracePeriodSeconds` values.
* As in any other case for Document Engine, all timeouts should be smaller than `terminationGracePeriodSeconds`, especially `config.requestTimeoutSeconds`.
* As common for ALB, [load balancer idle timeout](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_LoadBalancerAttribute.html) should be greater than the target group deregistration delay.

Here's an example of configuration subset to use with [AWS Load Balancer Controller](https://kubernetes-sigs.github.io/aws-load-balancer-controller/), passing platform service parameters as [ingress annotations](https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/ingress/annotations/):

```yaml
config:
  requestTimeoutSeconds: 180
  urlFetchTimeoutSeconds: 120
  generationTimeoutSeconds: 120
  workerTimeoutSeconds: 150
  readAnnotationBatchTimeoutSeconds: 120
terminationGracePeriodSeconds: 330
lifecycle: 
  preStop:
    sleep:
      seconds: 305
ingress:
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing 
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '5'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '2'
    alb.ingress.kubernetes.io/load-balancer-attributes: >-
      routing.http2.enabled=true,
      idle_timeout.timeout_seconds=600,
      routing.http.desync_mitigation_mode=defensive
    alb.ingress.kubernetes.io/target-group-attributes: >-
      deregistration_delay.timeout_seconds=300,
      load_balancing.algorithm.type=least_outstanding_requests,
      load_balancing.algorithm.anomaly_mitigation=off
    alb.ingress.kubernetes.io/listener-attributes.HTTPS-443: >-
      routing.http.response.server.enabled=false,
      routing.http.response.strict_transport_security.header_value=max-age=31536000;includeSubDomains;preload;
```

## Values

{{ template "chart.valuesTable" . }}

## Contribution

The chart is validated using [ct](https://github.com/helm/chart-testing/tree/main) [lint](https://github.com/helm/chart-testing/blob/main/doc/ct_lint.md):

```shell
ct lint --target-branch "$(git rev-parse --abbrev-ref HEAD)"
```

## License

This software is licensed under a [modified BSD license](LICENSE).

## Support, Issues and License Questions

Nutrient offers support via https://support.nutrient.io/hc/en-us/requests/new

Are you [evaluating our SDK](https://www.nutrient.io/sdk/)? That's great, we're happy to help out! To make sure this is fast, please use a work email and have someone from your company fill out our sales form: https://www.nutrient.io/contact-sales/

{{ template "helm-docs.versionFooter" . }}
