database:
  enabled: true
  migrationJob:
    enabled: false
    podAnnotations:
      do: "this"
    podLabels:
      do: "that"
  postgres:
    port: 5432
    username: postgres

assetStorage:
  backendType: s3
  backendFallback:
    enabled: true
    enabledPostgres: true
  s3:
    accessKeyId: "documentEngineObjectStorageRootKey"
    secretAccessKey: "documentEngineObjectStorageRootPassword"
    bucket: "document-engine-assets"
    region: "us-east-1"
    host: "{{ .Release.Name }}-minio"
    port: 9000
    scheme: "http://"
  redis:
    enabled: true
    host: "{{ .Release.Name }}-redis-master"
    database: ""
    username: ""
    password: ""
    ttlSeconds: 3600
    useTtl: true
    sentinel:
      enabled: false
      urls:
        - "redis://{{ .Release.Name }}-redis-node-0:26379"
        - "redis://{{ .Release.Name }}-redis-node-1:26379"
        - "redis://{{ .Release.Name }}-redis-node-2:26379"
      group: despair

observability:
  metrics:
    prometheusEndpoint:
      enabled: true

cloudNativePG:
  enabled: true

minio:
  enabled: true
  auth:
    rootUser: documentEngineObjectStorageRootKey
    rootPassword: documentEngineObjectStorageRootPassword
  defaultBuckets: "document-engine-assets"

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    count: 1
    revisionHistoryLimit: 1
    persistence:
      enabled: false
    persistentVolumeClaimRetentionPolicy:
      enabled: false
      whenDeleted: Delete
  # replica:
  #   replicaCount: 2
  #   revisionHistoryLimit: 1
  #   persistence:
  #     enabled: false
  #   persistentVolumeClaimRetentionPolicy:
  #     enabled: false
  #     whenDeleted: Delete
  # sentinel:
  #   enabled: true
  #   quorum: 3
  #   masterSet: despair
  #   getMasterTimeout: 90
  #   automateClusterRecovery: true
  #   redisShutdownWaitFailover: true
  #   persistence:
  #     enabled: false
