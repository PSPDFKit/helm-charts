#
# https://pspdfkit.com/guides/web/pspdfkit-server/configuration/overview/
#
pspdfkit:
  license:
    activationKey: none
    externalSecret: 
    #  name: secretName
      key: SERVER_ACTIVATION_KEY
  auth:
    api:
      createSecret: false
      # externalSecretName: secret-name
    # API_AUTH_TOKEN can be used isntead of JWT
      # apiToken: secret
      jwt:
        enabled: false
        publicKey: kwa
      # Supported algorithms: RS256, RS512, ES256, ES512. See RFC 7518 for details about specific algorithms.
        algorithm: RS256
    dashboard:
      createSecret: true
      username: admin
      # password: admin
      # externalSecretName: secret-name

  # A string used as the base key for deriving secret keys for the purposes of authentication. 
  # Choose a sufficiently long random string for this option. 
  # To generate a random string, use: openssl rand -hex 256.
  # secretKeyBase:

  log:
    level: info

  timeout: 1

  # trustedProxies: default
  signingService:
    enabled: false
    url: https://signing-thing.local/sign
    timeoutMs: 5000
    defaultSignerName: "John Doe"
    defaultSignatureReason: "approved"
    defaultSignatureLocation: "Head Quarters"
    digitalSignatureHashAlgorithm: sha512
    digitalSignatureCertificateCheckTime: current_time

  storage:
    databaseEngine: postgresql
    assetStorageBackend: built-in
    enableAssetStorageFallback: false
    postgres:
      # External secret with PGUSER, PGPASSWORD, PGDATABASE, PGHOST, PGPORT, PGSSL 
      createSecret: false
      externalSecretName: ""
    s3:
      auth:
        accessKeyId: "pspdfkitAccessKey"
        secretAccessKey: "pspdfkitSecretKey"
        # External secret with traditional `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`
        externalSecretName: ""
      bucket: "pspdfkit-server-assets"
      region: "us-east-1"
      # host: "os.local"
      port: 443
      scheme: "https://"

image:
  repository: pspdfkit/pspdfkit
  pullPolicy: IfNotPresent  
  # use `AppVersion` by default
  # tag: "2023.1.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

startupProbe:
  httpGet:
    path: /healthcheck
    port: api
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 5

livenessProbe:
  httpGet:
    path: /healthcheck
    port: api
    scheme: HTTP
  initialDelaySeconds: 0
  periodSeconds: 30
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /healthcheck
    port: api
    scheme: HTTP
  initialDelaySeconds: 0
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

resources: {}

replicaCount: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}

extraEnvs: []

extraVolumeMounts: []
extraVolumes: []

sidecars: []

initContainers: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: false
  architecture: standalone
  primary:
    persistence:
      enabled: false
  auth:
    enablePostgresUser: true
    postgresPassword: pspdfkit
    username: pspdfkit
    password: pspdfkit
    database: pspdfkit

minio:
  enabled: false
  mode: standalone
  replicas: 1
#  serviceAccount:
#    create: true
#    name: "{{ $.Release.Name }}-minio-sa"
  persistence:
    enabled: false
  rootUser: admin
  rootPassword: adminPassword
  policies:
    - name: pspdfkitServer
      statements:
        - resources:
            - "arn:aws:s3:::pspdfkit-server*/*"
          actions:
            - "s3:ListBucket"
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:DeleteObject"
#            - "s3:GetObjectAcl"
#            - "s3:GetObjectAcl"
  users:
    - accessKey: pspdfkitAccessKey
      secretKey: pspdfkitSecretKey
      policy: pspdfkitServer
  buckets:
    - name: pspdfkit-server-assets
      purge: false
      versioning: false
      policy: none
